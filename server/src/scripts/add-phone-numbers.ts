#!/usr/bin/env ts-node

import { PrismaClient } from '@prisma/client';

const prisma = new PrismaClient();

/**
 * üß™ Script pour ajouter des num√©ros de t√©l√©phone valides aux utilisateurs existants
 * Ce script met √† jour la base de donn√©es pour avoir des num√©ros de t√©l√©phone valides
 * pour tester la fonctionnalit√© SMS
 */

async function addPhoneNumbers() {
  try {
    console.log('üîç Recherche des utilisateurs sans num√©ro de t√©l√©phone...');
    
    // R√©cup√©rer tous les utilisateurs
    const users = await prisma.user.findMany({
      select: {
        id: true,
        email: true,
        firstName: true,
        lastName: true,
        phone: true
      }
    });

    console.log(`üìä ${users.length} utilisateurs trouv√©s`);

    // Utilisateurs sans num√©ro de t√©l√©phone
    const usersWithoutPhone = users.filter(user => !user.phone);
    console.log(`üì± ${usersWithoutPhone.length} utilisateurs sans num√©ro de t√©l√©phone`);

    if (usersWithoutPhone.length === 0) {
      console.log('‚úÖ Tous les utilisateurs ont d√©j√† un num√©ro de t√©l√©phone');
      return;
    }

    // Num√©ros de t√©l√©phone de test (Tunisie en premier)
    const testPhoneNumbers = [
      '+216 71 234 567', // Tunisie - Tunis
      '+216 73 456 789', // Tunisie - Sousse
      '+216 74 567 890', // Tunisie - Sfax
      '+33 6 12 34 56 78', // France
      '+33 6 98 76 54 32', // France
      '+213 5 61 23 45 67', // Alg√©rie
      '+212 6 12 34 56 78', // Maroc
      '+20 10 1234 5678', // √âgypte
      '+1 555 123 4567', // √âtats-Unis
      '+44 20 7946 0958', // Royaume-Uni
    ];

    console.log('üìù Ajout des num√©ros de t√©l√©phone de test...');

    // Mettre √† jour les utilisateurs sans num√©ro de t√©l√©phone
    for (let i = 0; i < usersWithoutPhone.length; i++) {
      const user = usersWithoutPhone[i];
      const phoneNumber = testPhoneNumbers[i % testPhoneNumbers.length];
      
      try {
        await prisma.user.update({
          where: { id: user.id },
          data: { phone: phoneNumber }
        });
        
        console.log(`‚úÖ ${user.email} -> ${phoneNumber}`);
      } catch (error) {
        console.error(`‚ùå Erreur lors de la mise √† jour de ${user.email}:`, error);
      }
    }

    console.log('‚úÖ Mise √† jour termin√©e !');

    // V√©rifier le r√©sultat
    const updatedUsers = await prisma.user.findMany({
      select: {
        email: true,
        phone: true
      }
    });

    console.log('\nüìä R√©sultat final :');
    updatedUsers.forEach(user => {
      const status = user.phone ? '‚úÖ' : '‚ùå';
      console.log(`${status} ${user.email}: ${user.phone || 'Aucun num√©ro'}`);
    });

  } catch (error) {
    console.error('‚ùå Erreur lors de l\'ex√©cution du script:', error);
  } finally {
    await prisma.$disconnect();
  }
}

// Ex√©cuter le script si appel√© directement
if (require.main === module) {
  addPhoneNumbers();
}

export { addPhoneNumbers }; 