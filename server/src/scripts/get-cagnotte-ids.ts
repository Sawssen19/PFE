import { PrismaClient } from '@prisma/client';

const prisma = new PrismaClient();

async function getCagnotteIds() {
  try {
    console.log('üîç R√©cup√©ration des IDs des cagnottes principales...\n');

    // R√©cup√©rer les cagnottes principales qui correspondent √† celles du frontend
    const mainCagnottes = await prisma.cagnotte.findMany({
      where: {
        title: {
          in: [
            "Aider Youssef √† vaincre le cancer",
            "Bourse d'√©tude pour Amina",
            "Reconstruction maison familiale",
            "Soins pour Noura",
            "Startup √©cologique",
            "Aide aux sinistr√©s de Sfax",
            "√âquipement pour √©cole rurale",
            "Soins v√©t√©rinaires pour refuge",
            "Formation professionnelle",
            "Aide aux personnes √¢g√©es",
            "Projet agricole communautaire",
            "Biblioth√®que mobile",
            "Centre de r√©habilitation",
            "Projet artistique",
            "Aide alimentaire d'urgence",
            "Aide Saeb √† poursuivre ses √©tudes en informatique",
            "Bourse d'√©tudes pour Nour en m√©decine",
            "√âquipement informatique pour l'√©cole rurale"
          ]
        }
      },
      select: {
        id: true,
        title: true,
        category: {
          select: {
            name: true
          }
        }
      },
      orderBy: {
        createdAt: 'desc'
      }
    });

    console.log('üìã IDs des cagnottes principales :\n');
    mainCagnottes.forEach((cagnotte, index) => {
      console.log(`${index + 1}. ${cagnotte.title}`);
      console.log(`   ID: ${cagnotte.id}`);
      console.log(`   Cat√©gorie: ${cagnotte.category.name}`);
      console.log('');
    });

    console.log(`\nüéØ Total: ${mainCagnottes.length} cagnottes trouv√©es`);

  } catch (error) {
    console.error('‚ùå Erreur:', error);
  } finally {
    await prisma.$disconnect();
  }
}

getCagnotteIds(); 