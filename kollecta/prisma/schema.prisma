generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String      @id @default(uuid())
  email         String      @unique
  password      String
  firstName     String
  lastName      String
  role          Role        @default(USER)
  status        UserStatus  @default(PENDING)
  verificationToken String?
  createdAt     DateTime    @default(now())
  updatedAt     DateTime    @updatedAt
  resetToken    String?
  resetTokenExp DateTime?
  cagnottes     Cagnotte[]  @relation("CagnotteCreator")
  promises      Promise[]   @relation("PromiseContributor")
  beneficiaries Cagnotte[]  @relation("CagnotteBeneficiary")
}

model Cagnotte {
  id            String     @id @default(uuid())
  title         String
  description   String
  goalAmount    Float
  currentAmount Float      @default(0)
  startDate     DateTime   @default(now())
  endDate       DateTime
  status        CagnotteStatus @default(ACTIVE)
  creatorId     String
  creator       User       @relation("CagnotteCreator", fields: [creatorId], references: [id])
  beneficiaryId String
  beneficiary   User       @relation("CagnotteBeneficiary", fields: [beneficiaryId], references: [id])
  categoryId    String
  category      Category   @relation(fields: [categoryId], references: [id])
  promises      Promise[]
  createdAt     DateTime   @default(now())
  updatedAt     DateTime   @updatedAt
}

model Promise {
  id            String    @id @default(uuid())
  amount        Float
  status        PromiseStatus @default(PENDING)
  contributorId String
  contributor   User      @relation("PromiseContributor", fields: [contributorId], references: [id])
  cagnotteId    String
  cagnotte      Cagnotte  @relation(fields: [cagnotteId], references: [id])
  promisedAt    DateTime  @default(now())
  paidAt        DateTime?
}

model Category {
  id          String     @id @default(uuid())
  name        String     @unique
  description String?
  cagnottes   Cagnotte[]
}

enum Role {
  USER
  ADMIN
  SUPPORT
}

enum UserStatus {
  PENDING
  ACTIVE
  SUSPENDED
}

enum CagnotteStatus {
  ACTIVE
  CLOSED
  SUCCESS
  FAILED
}

enum PromiseStatus {
  PENDING
  PAID
  CANCELLED
}